
# functions
function post_history { LAST_COMMAND=$(history 1 | sed -e 's/^ *[0-9]* *[0-9]*-[0-9]*-[0-9]* *[0-9]*:[0-9]*:[0-9]* *- *//g'); curl -d hostname="$HOSTNAME" -d command="$LAST_COMMAND" http://derf.us/history/; } 
function get_history {  echo -n "enter password: "; read -s HISTPASS; history -c; rm ~/.bash_history; curl -s http://derf.us/history/download.php?passwd=$HISTPASS > ~/.bash_history; history -r; }

function sshclear { if [ $1 -gt "0" ]; then REGEXP="${1}d"; sed -i".bak" $REGEXP ~/.ssh/known_hosts; fi }
function http { (exec 3<>/dev/tcp/$1/$2; echo -e "$3 $4 HTTP/1.0\r\n\r\n" >&3; cat <&3); }
function portcheck { (exec 3<>/dev/tcp/$1/$2) &>/dev/null; OPEN=$?; [ $OPEN -eq 0 ] && echo "open" || echo "closed"; return $OPEN; }
function portscan { HOST=$1; STARTPORT=$(echo $2 | cut -f 1 -d '-'); ENDPORT=$(echo $2 | cut -f 2 -d '-'); for PORT in `seq $STARTPORT $ENDPORT`; do portcheck $HOST $PORT > /dev/null && echo $PORT; done }
function dshload { unset HOSTLIST; INT=0; for HOST in `cat $1 | awk '{if ($2) { printf($2) } else { printf($1) } print "\n" }' | sort | uniq`; do HOSTLIST[$INT]=$HOST; INT=`expr $INT + 1`; done; }
function dshlist { for HOST in ${HOSTLIST[*]}; do echo $HOST; done ;}
function dsh { HOSTMASK=$1; DATETIME=`date '+%D %T'`; shift 1; for HOST in `dshlist | grep $HOSTMASK`; do (ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -x $HOST "$@" | xargs -n 500 echo $DATETIME $HOST: >> /tmp/dsh.log )& done; ACTIVE=1; until [[ $ACTIVE = 0 ]]; do jobs -l > /dev/null; ACTIVE=`jobs -p | wc -l`; printf "\r%s active jobs" $ACTIVE; done; }

function dload {
	URL=$1
	DEST=$2 
	portcheck localhost 18080 > /dev/null && export curlopts='--socks5 localhost:18080'; 
		( 
			which curl &> /dev/null && 
			curl $curlopts --progress-bar $URL > $DEST.tmp && 
			mv $DEST.tmp $DEST 
		) || 
		( 
			which wget &> /dev/null && 
			wget --no-check-certificate -O $DEST.tmp $URL && 
			mv $DEST.tmp $DEST; 
		); 
}

function bashup {

	pushd ~ > /dev/null
	dload https://raw.github.com/fredsmith/dotfiles/master/md5s ~/.md5s &&
	md5sum  -c ~/.md5s | grep FAILED | sed -e 's/:.*//' -e 's/^\.//' | 
	while read FILE; do 
		echo $FILE; 
		dload https://raw.github.com/fredsmith/dotfiles/master/$FILE ~/.$FILE
		if [ "$FILE" = "bashrc" ]; then
			source ~/.bashrc; 
		fi
	done
	popd > /dev/null
}

function makeenv { 
	ssh -o StrictHostKeyChecking=no $1 "mkdir ~/.ssh; ssh-add -L >> ~/.ssh/authorized_keys; chmod -R go-rwx ~/.ssh"; # pushing everything in ssh-agent to authorized-keys seems insecure, but I like the simplicity of it.   
	scp .bashrc $1:; 
}
