#! /bin/bash

source $( dirname "${BASH_SOURCE[0]}")/tmux

export SATISFACTION_HOME=~/workspace/satisfaction
export SATISFACTION_TOOLS=~/workspace/tools
export PATH=$PATH:$SATISFACTION_TOOLS/bin

function gsfnssh {
    HOST=$1;
    echo $@;
    shift;
    if [ $# -gt 0 ]; then
        ssh $HOST $@;
        sleep 10;
    else
        #ssh -t $HOST "bash --rcfile /net/yum/admin/work/fred/.bashrc";
        ssh $HOST || sleep 10;
    fi;
 }

function gsfnmultissh { 
   HOST=$1;
   shift;
   MULTARGS=$@;
   SHORTHOST=$(echo $HOST | sed -e 's/\..*//');
   settitle $SHORTHOST;
   HOSTLIST=$(grep "^$SHORTHOST" ~/.ssh/known_hosts | cut -f 1 -d ' ' | cut -f 1 -d ',');
   if [[ `echo "$HOSTLIST" | grep -v "^$" | wc -l` -eq "0" ]]; then
      gsfnssh $HOST $MULTARGS;
   else 
      if [[ `echo "$HOSTLIST" | grep -v "^$" | wc -l` -eq "1" ]]; then
         gsfnssh $HOSTLIST $MULTARGS;
      else 
         if [[ -z "$TMUX" ]]; then tmux -l new-session -s "$SHORTHOST" "source ${BASH_SOURCE[0]}; gsfnmultissh $HOST $MULTARGS"; return; fi
         if [[ `echo "$HOSTLIST" | grep -v "^$" | wc -l` -gt "1" ]]; then
            FIRST=true
            for HOST in $HOSTLIST; do
               if $FIRST; then
                  echo $HOST;
                  tmux new-window -n $SHORTHOST "source ${BASH_SOURCE[0]}; gsfnssh $HOST $MULTARGS";
                  FIRST=false;
               else
                  echo $HOST;
                  tmux split-window -h "source ${BASH_SOURCE[0]}; gsfnssh $HOST $MULTARGS";
               fi
            done
            tmux select-layout tiled;
         else
            echo "HOSTLIST malformed: $HOSTLIST"
         fi
     fi
   fi
   settitle bash;
}

function staging { HOST="staging-$1.staging.gsfn.us"; shift; gsfnmultissh $HOST $@; }
function west2 { HOST="west2-$1.prod.gsfn.us"; shift; gsfnmultissh $HOST $@; }
function east1 { HOST="east1-$1.prod.gsfn.us"; shift; gsfnssh $HOST $@; }
