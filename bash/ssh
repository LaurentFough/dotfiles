#! /usr/bin/env bash


# auto-start keychain
if which keychain &> /dev/null; then
	eval `keychain --inherit any --agents ssh --quick --quiet --eval`
fi


# bash completion for ssh config
if [ -f ~/.ssh/config ]; then
   complete -W "$(cat ~/.ssh/config | grep "Host \w" | cut -f 2 -d ' ')" ssh
fi

complete -W "$(ls ~/.ssh/*.*sa | sed -e 's/.*\///' | cut -f 1 -d '.')" add


# functions
function sshclear { if [ $1 -gt "0" ]; then REGEXP="${1}d"; sed -i".bak" $REGEXP ~/.ssh/known_hosts; fi }
function add { 
  FILELIST="$HOME/.ssh/key.rsa"
  for ARG in $*; do
    FILELIST="$FILELIST $HOME/.ssh/$ARG.*sa";
  done
  ssh-add $FILELIST
}

#aliases

#ssh agent
alias lock='/usr/bin/ssh-add -D'
alias list='/usr/bin/ssh-add -l'


#host specific commands
alias mi='ssh mimas'
alias io='ssh io'

# Add bash completion for ssh: it tries to complete the host to which you 
# want to connect from the list of the ones contained in ~/.ssh/known_hosts

#__ssh_known_hosts() {
#    if [[ -f ~/.ssh/known_hosts ]]; then
#        cut -d " " -f1 ~/.ssh/known_hosts | cut -d "," -f1
#    fi
#}

#_ssh() {
#    local cur known_hosts
#    COMPREPLY=()
#    cur="${COMP_WORDS[COMP_CWORD]}"
#    known_hosts="$(__ssh_known_hosts)"
#    
#    if [[ ! ${cur} == -* ]] ; then
#      COMPREPLY=( $(compgen -W "${known_hosts}" -- ${cur}) )
#        return 0
#    fi
#}

#complete -o bashdefault -o default -o nospace -F _ssh ssh 2>/dev/null \
#  || complete -o default -o nospace -F _ssh ssh
